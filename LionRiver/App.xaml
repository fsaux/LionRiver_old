<Application x:Class="LionRiver.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <Style x:Key="labelStyle" TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>

        <LinearGradientBrush x:Key="ColorMap" StartPoint="0,0" EndPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
            <GradientStop Color="#FF093893" Offset="0.203" />
            <GradientStop Color="#FF10FF20" Offset="0.535" />
            <GradientStop Color="#FFFFFF60" Offset="0.663" />
            <GradientStop Color="#FFFF4B00" Offset="0.855" />
            <GradientStop Color="#FFA925FF" Offset="1" />
            <GradientStop Color="#FF94C8F5" Offset="0.343" />
        </LinearGradientBrush>

        <DataTemplate x:Key="RedBackground">
            <Grid>
                <TextBlock Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding}"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="ToggleButton" x:Key="checkedToggle">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource RedBackground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
        </Style>

        <Style x:Key="ColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background"> 
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFB888E2" Offset="0" />
                        <GradientStop Color="Violet" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
        </Style>

        <Style x:Key="ColumnHeaderStyle2" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF2AF85" Offset="0" />
                        <GradientStop Color="Orange" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
        </Style>

        <Style x:Key="ColumnHeaderStyle3" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF6ABCD4" Offset="0" />
                        <GradientStop Color="Cyan" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
        </Style>

        <Style x:Key="ColumnHeaderStyle4" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFDEDE61" Offset="0" />
                        <GradientStop Color="Yellow" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="0,1,1,1"/>
        </Style>

        <Style x:Key="RowStyle" TargetType="DataGridRow" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Silver" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Lime"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CellStyle"  TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="DataGridCheckBox">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type GridViewColumn}},Path=ActualWidth}" />
        </Style>


        <Style x:Key="MainToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="ToggleBorder" To="LimeGreen" Duration="0:0:0.1">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="ToggleBorder" To="LimeGreen" Duration="0:0:0.1">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            
                            <Grid>
                                
                                <Border Name="ToggleBorder" BorderBrush="Black" BorderThickness="2" CornerRadius="4" >
                                    <Border.Background>
                                        <SolidColorBrush Color="#FF708BD4"/>
                                    </Border.Background>
                                </Border>
                                
                            <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            
                            </Grid>
                            
                        </Grid>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBlockToggleForeground" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=FormattedValue}" Value="">
                    <Setter Property="Foreground" Value="Red"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
               
        
    </Application.Resources>
</Application>
